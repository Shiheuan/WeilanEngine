#version 450
#include "Common/Common.glsl"

#if CONFIG
name: Internal/OutlineByStencilDrawOutline
interleaved: False
depth:
    testEnable: False
    writeEnable : False
    compOp: always
stencil:
    testEnable : True
    front:
        failOp: keep
        passOp: keep
        compareOp: notEqual
        reference: 1
cull: back
#endif

#if VERT
layout(location = 0) in vec3 i_Position;
layout(location = 1) in vec3 i_Normal;

out gl_PerVertex
{
    vec4 gl_Position;
};

void main()
{
    vec4 posVS = scene.view * pconst.model * vec4(i_Position, 1);
    vec3 normVS = mat3(scene.view) * mat3(pconst.model) * i_Normal;
    posVS.xyz = posVS.xyz + normalize(vec3(normVS.x, normVS.y, 0)) * 0.1;
    gl_Position = scene.projection * vec4(posVS.xyz, 1);
}
#endif

#if FRAG

layout(location = 0) out vec4 o_Color;

void main() {
    o_Color = vec4(1, 0.647, 0, 1);
}

#endif
