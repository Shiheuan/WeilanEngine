#pragma once

#include <vulkan/vulkan.h>
#include <vector>
namespace Engine::Gfx::Obsolate
{
    class VKObjectManager;

    class VKDescriptorPool
    {
        public:
            VKDescriptorPool(VKObjectManager* objManager, std::vector<VkDescriptorPoolSize>&& poolSize, VkDescriptorSetLayout layout, uint32_t poolMaxSize);
            ~VKDescriptorPool();
            VkDescriptorSet RequestDescriptorSet();
            void ReleaseDescriptorSet(VkDescriptorSet set);
        private:

            VkDescriptorPool freePool = VK_NULL_HANDLE;
            std::vector<VkDescriptorPool> fullPools;
            std::vector<VkDescriptorSet> freeSets;

            std::vector<VkDescriptorPoolSize> poolSizes;
            VkDescriptorPoolCreateInfo createInfo;
            VKObjectManager* objManager;
            VkDescriptorSetLayout layout;
    };
}